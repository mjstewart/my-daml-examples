daml 1.2
module SecretSanta where

import qualified DA.Next.Map as M

template InvitationManager
  with
    sponsor : Party
  where
    signatory party



template SecretSanta
  with
    sponsor : Party
    participants : [Party]
    id : Text
    gifts : M.Map Party Text
  where
    signatory sponsor

    key (sponsor, id) : (Party, Text)
    maintainer key._1

    controller sponsor can
        nonconsuming SecretSanta_RegisterParticipant: ContractId RegisterParticipantRequest
          with
            participant : Party
          do
            create RegisterParticipantRequest with
              confirmation = ParticipantConfirmed with
                sponsor
                participant
                id


    controller sponsor can
      SecretSanta_AddParticipant: ContractId SecretSanta
        with _confirmed : ContractId ParticipantConfirmed
        do
          confirmed <- fetch _confirmed


          create this with
            participants = confirmed.participant :: participants




template RegisterParticipantRequest
  with
    confirmation : ParticipantConfirmed
  where
    signatory confirmation.sponsor

    controller confirmation.participant can
      RequestParticipantRequest_Accept : ContractId ParticipantConfirmed
        do
          create confirmation

template ParticipantConfirmed
  with
    sponsor : Party
    participant : Party
    id : Text
  where
    signatory sponsor, participant

    controller sponsor, participant can
      ParticipantConfirmed_Add : ContractId SecretSanta
        do
          (_, santa) <- fetchByKey @SecretSanta (sponsor, id)
          -- validation sponsor == santa.sponsor etc.
          create santa with participants = participant :: santa.participants


test = scenario do
  [office, alice, bob, kelly] <- mapA getParty ["TheOffice", "Alice", "Bob", "Kelly"]

  _office_secret_santa <- submit office do
    create SecretSanta with
      sponsor = office
      participants = []
      id = "2019"
      gifts = M.empty

  _register_alice <- submit office do
    exercise _office_secret_santa SecretSanta_RegisterParticipant with
      participant = alice

  _alice_confirmed <- submit alice do
    exercise _register_alice RequestParticipantRequest_Accept

  pure _alice_confirmed
  -- submit office do
    -- exercise _alice_confirmed ParticipantConfirmed_Add with

  -- submit office do
    -- exercise _office_santa SecretSanta_AddParticipant with
      -- _confirmed = _alice_confirmed
