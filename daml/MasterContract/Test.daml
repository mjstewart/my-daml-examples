daml 1.2
module Test where

import AcmeTodoMaster
import TodoAppManager
import Todo
import AccessToken
import DA.Time

describe : Text -> Scenario a -> Scenario a
describe msg = scenario

t1 = describe (
    "Should not be able to create random contracts" <>
    "without going through the master contracts" ) do
  pure ()

flow = scenario do
  [acme, acmeClient, bob, rogue] <- mapA getParty ["ACME", "AcmeClient", "bob", "rogue"]
  now <- getTime

  _acme_master <- submit acme do
    create AcmeTodoAppMaster with operator = acme

  _master_invite_client <- submit acme do
    exercise _acme_master AcmeTodoAppMaster_Invite with
      manager = TodoAppManager with
        vendor = acme
        client = acmeClient
        appId = "TODO_APP"
      token = AccessToken with
        vendor = acme
        client = acmeClient
        effectiveFrom = now
        effectiveTo = None
        appId = "ACME_TODO_APP"
        description = "ACME INC grants access to AcmeClient given the supplied time span"

  (_manager, _token) <- submit acmeClient do
    exercise _master_invite_client AcmeTodoAppInvite_Accept

  assign_bob_request <- submit acmeClient do
    exercise _manager TodoAppManager_Assign with
      -- _token
      todo = AssignedTodo with
        operator = acme
        client = acmeClient
        assignee = bob
        description = "mow the lawn"
        priority = High

  assigned_todo_bob <- submit bob do
    exercise assign_bob_request AssignTodoRequest_Accept with _token

  submit bob do
    exercise assigned_todo_bob AssignedTodo_Start with _token



  -- i cant just assign todos to anyone, you must go through the work flow to create
  -- assign todos in order to capture the signatories properly. this is built in defense.
  -- There is no way anyone can capture these signatories because they cant just randomly
  -- invent dummy contracts to step through a propose / accept pattern to capture the sigs!
  submitMustFail acme do
    create AssignedTodo with
        operator = acme
        client = acmeClient
        assignee = bob
        description = "mow the lawn"
        priority = High





  -- -- same as above since all 3 people need signatory
  -- submitMustFail alice do
    -- create AssignedTodo with
      -- operator = acme
      -- client = alice
      -- assignee = bob
      -- description = "mow the lawns"
      -- priority = High

  -- now <- pass (minutes 1)
  -- future <- pass (minutes 2)

  -- acme_alice_access_request <- submit acme do
    -- create AppAccessRequest with
      -- relationship = AccessToken with
        -- vendor = acme
        -- client = alice
        -- effectiveFrom = now
        -- effectiveTo = Some future
        -- appId = "acme_alice_todoapp"
        -- description = "ACME permits alice access to the Todo App"

  -- acme_alice_relationship <- submit alice do
    -- exercise acme_alice_access_request AppAccessRequest_Accept

  -- bob_assign_request <- submit alice do
    -- exercise alice_todo_manager TodoManager_Assign with
      -- token = acme_alice_relationship
      -- todo = AssignedTodo with
        -- operator = acme
        -- client = alice
        -- assignee = bob
        -- description = "mow the lawns"
        -- priority = High

  -- submit bob do
   -- create AssignedTodo with
        -- operator = acme
        -- client = alice
        -- assignee = bob
        -- description = "mow the lawns"
        -- priority = High

  pure ()
